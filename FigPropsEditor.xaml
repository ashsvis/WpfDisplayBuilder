<Window x:Class="WpfDisplayBuilder.FigPropsEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:local="clr-namespace:WpfDisplayBuilder"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        x:Name="Window"
        Title="Свойства фигуры" Height="400" Width="434" ResizeMode="NoResize" ShowInTaskbar="False" Closing="Window_Closing" 
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
    <Window.Resources>
        <!--Create list of enumeration values-->
        <ObjectDataProvider x:Key="CustomPropTypeEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="local:CustomPropType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="TextAlignmentData" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:FigHorizontalAlignment" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="VisibilityData" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:FigVisibility" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="StrokeDashStylesData" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:FigDashStyles" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <local:ColorConverter x:Key="ColorConv"/>
        <local:StringConverter x:Key="StringConv"/>
        <ObjectDataProvider x:Key="FillModeData" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:FillMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="GradientModeData" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:GradientMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <local:EnumToFriendlyNameConverter x:Key="EnumItemsConverter"/>
    </Window.Resources>
    <Grid TextOptions.TextFormattingMode="Display" >
        <TabControl Name="PropsTabControl" Margin="0,10,10,0">
            <TabItem Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Header="Общие">
                <StackPanel>
                    <GroupBox Margin="5,5,30,5" Header="Идентификация">
                        <StackPanel>
                            <Label>Наименование</Label>
                            <TextBox Text="{Binding Path=Name}" Margin="5,0,0,0" Width="153" HorizontalAlignment="Left" TextWrapping="NoWrap" />
                            <Label>Подсказка</Label>
                            <TextBox Text="{Binding Path=ToolTip}" Margin="5,0,0,0" Width="346" HorizontalAlignment="Left" TextWrapping="NoWrap" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Margin="5,5,30,5" Header="Стиль">
                        <Grid Height="Auto" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Слева:" VerticalAlignment="Center" HorizontalAlignment="Right" />
                            <TextBox Text="{Binding Path=Left, UpdateSourceTrigger=Explicit}" Tag ="Left"
                                     Name="LeftEdit" Grid.Column="1" HorizontalAlignment="Left" 
                                     TextWrapping="NoWrap" VerticalAlignment="Bottom" Width="80"
                                     KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus" 
                                     TextChanged="TextBox_TextChanged" GotFocus="TextBox_GotFocus"
                                     x:FieldModifier="private" Margin="0,0,0,2" />
                            <Label Grid.Column="2" Content="Ширина:" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <TextBox Text="{Binding Path=Width, UpdateSourceTrigger=Explicit}" Tag="Width"
                                     Name ="WidthEdit" Grid.Column="3" HorizontalAlignment="Left" 
                                     TextWrapping="NoWrap" VerticalAlignment="Center" Width="80" 
                                     KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus" 
                                     TextChanged="TextBox_TextChanged" GotFocus="TextBox_GotFocus"
                                     x:FieldModifier="private" />
                            <Label Content="Сверху:" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="1" />
                            <TextBox Text="{Binding Path=Top, UpdateSourceTrigger=Explicit}" Tag="Top"
                                     Name ="TopEdit" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="1"
                                     TextWrapping="NoWrap" VerticalAlignment="Center" Width="80"
                                     KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus" 
                                     TextChanged="TextBox_TextChanged" GotFocus="TextBox_GotFocus"
                                     x:FieldModifier="private" />
                            <Label Grid.Column="2" Content="Высота:" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="1" />
                            <TextBox Text="{Binding Path=Height, UpdateSourceTrigger=Explicit}" Tag="Height"
                                     Name="HeightEdit"  Grid.Column="3" HorizontalAlignment="Left" Grid.Row="1"  
                                     TextWrapping="NoWrap" VerticalAlignment="Center" Width="80" 
                                     KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus" 
                                     TextChanged="TextBox_TextChanged" GotFocus="TextBox_GotFocus"
                                     x:FieldModifier="private" />
                            <Label Content="Вращение:" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="2" />
                            <TextBox Text="{Binding Path=Rotation, UpdateSourceTrigger=Explicit}"
                                     Name ="RotationEdit" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="2"
                                     TextWrapping="NoWrap" VerticalAlignment="Center" Width="80"
                                     KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus" 
                                     TextChanged="TextBox_TextChanged" GotFocus="TextBox_GotFocus"
                                     x:FieldModifier="private" />
                            <Label Grid.Column="2" Content="Видимость:" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="2" />
                            <ComboBox Height="Auto" SelectedItem="{Binding Path=Visibility}" Grid.Column="3" Grid.Row="2"
                                          ItemsSource="{Binding Source={StaticResource VisibilityData}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=.,Mode=OneWay, 
                                            Converter={StaticResource EnumItemsConverter}}"
                                            Height="Auto" Margin="0" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <Label Visibility="Collapsed" Content="Стиль:" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="3" />
                            <ComboBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                      Visibility="Collapsed" Width="140"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox Margin="5,5,55,5" Header="Табулирование (порядок обхода)">
                        <Grid Height="Auto" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Name="TabEnabled" IsChecked="{Binding Path=TabEnabled}" VerticalAlignment="Center" Grid.ColumnSpan="2">Разрешить выбор табуляцией</CheckBox>
                            <Label Grid.Column="2" Content="Индекс:" VerticalAlignment="Center" HorizontalAlignment="Right"
                                   IsEnabled="{Binding ElementName=TabEnabled, Path=IsChecked}" />
                            <TextBox Text="{Binding Path=TabIndex}" IsEnabled="{Binding ElementName=TabEnabled, Path=IsChecked}"
                                     Grid.Column="3" HorizontalAlignment="Left" 
                                     TextWrapping="NoWrap" VerticalAlignment="Center" Width="60" 
                                     ToolTip="Индекс порядка обхода" />
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Header="Поведение">
                <StackPanel>
                    <ListBox Margin="5,5,0,5" Width="200" Height="73" HorizontalAlignment="Left">
                        <CheckBox Margin="0,1,0,0" Name="Faceplate" IsChecked="{Binding Path=FaceplateOption}">Панель значения</CheckBox>
                        <CheckBox Margin="0,1,0,0" Name="Hover" IsChecked="{Binding Path=HoverOption}">Нависание указателя мышки</CheckBox>
                        <CheckBox Margin="0,1,0,0" Name="Popup" IsChecked="{Binding Path=PopupOption}">Всплывающее окно</CheckBox>
                        <CheckBox Margin="0,1,0,0" Name="ScriptData" IsChecked="{Binding Path=ScriptdataOption}">Данные скрипта</CheckBox>
                    </ListBox>
                    <GroupBox Header="Пояснения" Width="368" Height="105" HorizontalAlignment="Left">
                        <StackPanel Margin="5">
                            <TextBlock TextWrapping="Wrap" Visibility="{Binding ElementName=Faceplate, Path=IsMouseOver, Converter={StaticResource BoolToVis}}">
                                Эта опция позволяет настроить поведение элемента, 
                                при щелчке на котором вызывается панель значения.</TextBlock>
                            <TextBlock TextWrapping="Wrap" Visibility="{Binding ElementName=Hover, Path=IsMouseOver, Converter={StaticResource BoolToVis}}">
                                Эта опция позволяет показывать данные во всплывающей подсказке 
                                при задерживании курсора мыши над элементом, если они не умещаются полностью в тексте элемента.</TextBlock>
                            <TextBlock TextWrapping="Wrap" Visibility="{Binding ElementName=Popup, Path=IsMouseOver, Converter={StaticResource BoolToVis}}">
                                Эта опция позволяет настроить поведение элемента, 
                                при щелчке на котором открывается всплывающее окно.</TextBlock>
                            <TextBlock TextWrapping="Wrap" Visibility="{Binding ElementName=ScriptData, Path=IsMouseOver, Converter={StaticResource BoolToVis}}">
                                Эта опция позволяет скрипту получать данные непосредственно.</TextBlock>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                     Visibility="{Binding Path=IsCheckbox, Converter={StaticResource BoolToVis}}"
                     IsVisibleChanged="TabItem_IsVisibleChanged"
                     Header="Флажок" Height="23" VerticalAlignment="Bottom">
                <StackPanel>
                    <Label Margin="10,10,0,0" Content="Метка:"/>
                    <TextBox Margin="15,0,120,0" Text="{Binding Path=Text}"/>
                    <CheckBox Margin="15,10,120,10" Content="Использовать инверсную логику" />
                </StackPanel>
            </TabItem>
            <TabItem Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                     Visibility="{Binding Path=IsButton, Converter={StaticResource BoolToVis}}"
                     IsVisibleChanged="TabItem_IsVisibleChanged"
                     Header="Кнопка" Height="23" VerticalAlignment="Bottom">
                <StackPanel>
                    <Label Margin="10,10,0,0" Content="Надпись на кнопке:"/>
                    <TextBox Margin="15,0,120,0" Text="{Binding Path=Text}"/>
                </StackPanel>
            </TabItem>
            <TabItem Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                     Visibility="{Binding Path=IsCommonText, Converter={StaticResource BoolToVis}}"
                     IsVisibleChanged="TabItem_IsVisibleChanged"
                     Header="Текст" Height="23" VerticalAlignment="Bottom">
                <StackPanel>
                    <Label Margin="10,10,0,0" Content="Текст элемента:"/>
                    <TextBox Margin="15,0,120,0" Text="{Binding Path=Text}" Height="132" TextWrapping="Wrap"/>
                </StackPanel>
            </TabItem>
            <TabItem Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Header="Цвета" Height="23" VerticalAlignment="Bottom">
                <StackPanel Orientation="Horizontal">
                    <Border Margin="5,1,5,1" Background="White" BorderBrush="Black" BorderThickness="1" Width="160">
                        <StackPanel>
                            <Button Name="FillColorButton" VerticalAlignment="Top" HorizontalContentAlignment="Left" Click="FillColorButton_Click">
                                <StackPanel Orientation="Horizontal">
                                    <Border Width="25" Height="25" Margin="2" BorderThickness="1" BorderBrush="Black">
                                        <Rectangle Fill="{Binding Path=FillColor, Converter={StaticResource ColorConv}}"></Rectangle>
                                    </Border>
                                    <Label Content="Цвет заполнения" VerticalAlignment="Center" />
                                </StackPanel>
                            </Button>
                            <Button Name="FillGradientColorButton" VerticalAlignment="Top" HorizontalContentAlignment="Left"
                                    Visibility="{Binding Path=IsGradient, Converter={StaticResource BoolToVis}}" 
                                    Click="FillGradientColorButton_Click" 
                                    IsVisibleChanged="FillGradientColorButton_IsVisibleChanged">
                                <StackPanel Orientation="Horizontal">
                                    <Border Width="25" Height="25" Margin="2" BorderThickness="1" BorderBrush="Black">
                                        <Rectangle Fill="{Binding Path=FillGradientColor, Converter={StaticResource ColorConv}}"></Rectangle>
                                    </Border>
                                    <Label Content="Цвет градиента" VerticalAlignment="Center" />
                                </StackPanel>
                            </Button>
                            <Button Name="StrokeColorButton" VerticalAlignment="Top" HorizontalContentAlignment="Left"
                                    Visibility="{Binding Path=IsStrokeContent, Converter={StaticResource BoolToVis}}"
                                    Click="StrokeColorButton_Click" IsVisibleChanged="StrokeColorButton_IsVisibleChanged">
                                <StackPanel Orientation="Horizontal">
                                    <Border Width="25" Height="25" Margin="2" BorderThickness="1" BorderBrush="Black">
                                        <Rectangle Fill="{Binding Path=StrokeColor, Converter={StaticResource ColorConv}}"></Rectangle>
                                    </Border>
                                    <Label Content="Цвет линий" VerticalAlignment="Center" />
                                </StackPanel>
                            </Button>
                            <Button Name="TextColorButton" VerticalAlignment="Top" HorizontalContentAlignment="Left"
                                    Visibility="{Binding Path=IsTextContent, Converter={StaticResource BoolToVis}}"
                                    Click="TextColorButton_Click" IsVisibleChanged="TextColorButton_IsVisibleChanged">
                                <StackPanel Orientation="Horizontal">
                                    <Border Width="25" Height="25" Margin="2" BorderThickness="1" BorderBrush="Black">
                                        <Rectangle Fill="{Binding Path=FontColor, Converter={StaticResource ColorConv}}"></Rectangle>
                                    </Border>
                                    <Label Content="Цвет текста" VerticalAlignment="Center" />
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Border>
                    <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left">
                        <Border Name="FillColorBorder" BorderThickness="1" BorderBrush="Silver" CornerRadius="2" Visibility="Visible" Margin="5,1,5,1" x:FieldModifier="private">
                            <StackPanel Margin="5" HorizontalAlignment="Left">
                                <Label>Цвет заполнения:</Label>
                                <ComboBox ItemsSource="{Binding ElementName=Window, Path=SimpleColorList, Mode=OneTime}" Width="200"
                            SelectedValue="{Binding Path=FillColor, Mode=TwoWay, Converter={StaticResource ColorConv}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="Black"
                                                    BorderThickness="1"
                                                    CornerRadius="2"
                                                    Margin="0,1,5,1"
                                                    Background="{Binding}"
                                                    Width="50"
                                                    Height="18">
                                                </Border>
                                                <TextBlock Width="130" Text="{Binding}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Margin="5" IsChecked="{Binding Path=FillColorBlink}"
                                          Visibility="{Binding Path=IsNotControl, Converter={StaticResource BoolToVis}}">Мигающий</CheckBox>
                                <ComboBox Name="BrushKind" Width="156" Height="Auto" HorizontalAlignment="Left" Margin="0,5,5,0"
                                            SelectedItem="{Binding Path=FillMode}" 
                                            ItemsSource="{Binding Source={StaticResource FillModeData}}" 
                                            SelectionChanged="BrushKind_SelectionChanged">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=.,Mode=OneWay, 
                                        Converter={StaticResource EnumItemsConverter}}"
                                        Height="Auto" Margin="0" VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </Border>
                        <Border Name="FillGradientColorBorder" BorderThickness="1" BorderBrush="Silver" CornerRadius="2" 
                                Visibility="Collapsed" 
                                Margin="5,1,5,1"
                                x:FieldModifier="private">
                            <StackPanel Margin="5" HorizontalAlignment="Left">
                                <Label>Цвет градиента:</Label>
                                <ComboBox ItemsSource="{Binding ElementName=Window, Path=SimpleColorList, Mode=OneTime}" Width="200"
                                SelectedValue="{Binding Path=FillGradientColor, Mode=TwoWay, Converter={StaticResource ColorConv}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="Black"
                                                        BorderThickness="1"
                                                        CornerRadius="2"
                                                        Margin="0,1,5,1"
                                                        Background="{Binding}"
                                                        Width="50"
                                                        Height="18">
                                                </Border>
                                                <TextBlock Width="130" Text="{Binding}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <StackPanel Name="FillOffsetPanel" HorizontalAlignment="Left" Margin="0,5,0,0" Width="200"
                                            Visibility="{Binding Path=IsLinearGradient, Converter={StaticResource BoolToVis}}">
                                    <Label>Смещение цвета блика:</Label>
                                    <Slider Value="{Binding Path=FillOffset}" Maximum="1" LargeChange="0.25" SmallChange="0.05" TickFrequency="0.05" TickPlacement="TopLeft"></Slider>
                                </StackPanel>
                                <ComboBox Name="GradientKind" Width="156" Height="Auto" HorizontalAlignment="Left" Margin="0,5,5,0"
                                            SelectedItem="{Binding Path=GradientMode}" 
                                            ItemsSource="{Binding Source={StaticResource GradientModeData}}" 
                                            SelectionChanged="GradientKind_SelectionChanged">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=.,Mode=OneWay, 
                                        Converter={StaticResource EnumItemsConverter}}"
                                        Height="Auto" Margin="0" VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </Border>
                        <Border Name="StrokeColorBorder" BorderThickness="1" BorderBrush="Silver" CornerRadius="2" Visibility="Collapsed" Margin="5,1,5,1"
                                x:FieldModifier="private">
                            <StackPanel Margin="5">
                                <Label>Цвет линий:</Label>
                                <ComboBox ItemsSource="{Binding ElementName=Window, Path=SimpleColorList, Mode=OneTime}" Width="200"
                            SelectedValue="{Binding Path=StrokeColor, Mode=TwoWay, Converter={StaticResource ColorConv}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="Black"
                                                    BorderThickness="1"
                                                    CornerRadius="2"
                                                    Margin="0,1,5,1"
                                                    Background="{Binding}"
                                                    Width="50"
                                                    Height="18">
                                                </Border>
                                                <TextBlock Width="130" Text="{Binding}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Margin="5" IsChecked="{Binding Path=StrokeColorBlink}"
                                          Visibility="{Binding Path=IsNotControl, Converter={StaticResource BoolToVis}}">Мигающий</CheckBox>
                            </StackPanel>
                        </Border>
                        <Border Name="FontColorBorder" BorderThickness="1" BorderBrush="Silver" CornerRadius="2" Visibility="Collapsed" Margin="5,1,5,1"
                                x:FieldModifier="private">
                            <StackPanel Margin="5">
                                <Label>Цвет текста:</Label>
                                <ComboBox ItemsSource="{Binding ElementName=Window, Path=SimpleColorList, Mode=OneTime}" Width="200"
                            SelectedValue="{Binding Path=FontColor, Mode=TwoWay, Converter={StaticResource ColorConv}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="Black"
                                                    BorderThickness="1"
                                                    CornerRadius="2"
                                                    Margin="0,1,5,1"
                                                    Background="{Binding}"
                                                    Width="50"
                                                    Height="18">
                                                </Border>
                                                <TextBlock Width="130" Text="{Binding}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Margin="5" IsChecked="{Binding Path=FontColorBlink}"
                                          Visibility="{Binding Path=IsNotControl, Converter={StaticResource BoolToVis}}">Мигающий</CheckBox>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Header="Линии"
                     Visibility="{Binding Path=IsStrokeContent, Converter={StaticResource BoolToVis}}"
                     IsVisibleChanged="TabItem_IsVisibleChanged">
                <StackPanel>
                    <GroupBox Header="Линии" Padding="5">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Толщина:" />
                            <ComboBox Width="100" SnapsToDevicePixels="True"
                                      ItemsSource="{Binding ElementName=Window, Path=SimpleThicknessList, Mode=OneTime}"
                                      SelectedValue="{Binding Path=StrokeThickness, Mode=TwoWay, Converter={StaticResource StringConv}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="3,0,3,0" Width="10" Text="{Binding}" />
                                            <Border Margin="0,1,5,1"
                                                    Background="Black"
                                                    Width="50"
                                                    Height="{Binding}">
                                            </Border>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <Label Margin="20,0,0,0" Content="Стиль:" />
                            <ComboBox Width="140" SnapsToDevicePixels="True"
                                      SelectedItem="{Binding Path=StrokeDashStyle}"
                                      ItemsSource="{Binding Source={StaticResource StrokeDashStylesData}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=.,Mode=OneWay, 
                                            Converter={StaticResource EnumItemsConverter}}"
                                            Height="Auto" Margin="0" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Углы" Padding="5"
                              Visibility="{Binding Path=IsRectCorners, Converter={StaticResource BoolToVis}}">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Закругление:" />
                            <Slider Width="105" Maximum="1" Value="{Binding Path=CornersRoundness}"
                                    TickFrequency="0.1" TickPlacement="TopLeft" LargeChange="0.1" SmallChange="0.01" />
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Header="Шрифт"
                     Visibility="{Binding Path=IsTextContent, Converter={StaticResource BoolToVis}}" 
                     IsVisibleChanged="TabItem_IsVisibleChanged">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="57"/>
                        <RowDefinition Height="Auto" MinHeight="225"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="152"></ColumnDefinition>
                        <ColumnDefinition Width="102"></ColumnDefinition>
                        <ColumnDefinition Width="Auto" MinWidth="154"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label HorizontalAlignment="Left" Content="Шрифт:" Width="52" />
                    <TextBox Grid.Row="2" HorizontalAlignment="Left" Width="148" Text="{Binding Path=FontName}" Margin="3,1"/>
                    <ListBox Grid.Row="3" Grid.RowSpan="3" Height="186" VerticalAlignment="Top" Margin="3,0"
                             ItemsSource="{Binding ElementName=Window, Path=SimpleFontList, Mode=OneTime}"
                             SelectedValue="{Binding Path=FontName, Mode=TwoWay}"/>
                    <Label Grid.Column="1" HorizontalAlignment="Left" Content="Размер:" Width="53" />
                    <TextBox Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Width="90" Text="{Binding Path=FontSize}" Margin="5,1,0,1"/>
                    <ListBox Grid.Column="1" Grid.RowSpan="3" Height="186" Grid.Row="3" VerticalAlignment="Top" Margin="5,0,6,0"
                             SelectedValue="{Binding Path=FontSize, Mode=TwoWay, Converter={StaticResource StringConv}}" 
                             ItemsSource="{Binding ElementName=Window, Path=SimpleFontSizes, Mode=OneTime}" />
                    <Label Grid.Column="2" HorizontalAlignment="Left"  Content="Выравнивание:" Width="100" />
                    <TextBox Grid.Column="2" Grid.Row="2" HorizontalAlignment="Left" Width="86" 
                             Text="{Binding Path=TextAlignment, Converter={StaticResource EnumItemsConverter}}" Margin="5,1,0,1"/>
                    <ListBox Grid.Column="2" Grid.Row="3" VerticalAlignment="Top" Margin="5,0,63,0" Grid.RowSpan="2" Height="72"
                             SelectedItem="{Binding Path=TextAlignment}"
                             ItemsSource="{Binding Source={StaticResource TextAlignmentData}}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=.,Mode=OneWay, 
                                            Converter={StaticResource EnumItemsConverter}}"
                                            Height="Auto" Margin="0" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <GroupBox Grid.Column="2" Grid.Row="5" Width="133" Margin="0,5,0,0"  
                              Header="Эффекты" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="3">
                        <StackPanel>
                            <CheckBox Margin ="0,1,0,1" IsChecked="{Binding Path=FontIsBold}" Content="Полужирный" />
                            <CheckBox Margin ="0,0,0,1" IsChecked="{Binding Path=FontIsItalic}" Content="Курсив" />
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Header="Данные скрипта" 
                     Visibility="{Binding ElementName=ScriptData, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                <StackPanel Orientation="Vertical" >
                    <DataGrid Name="CustomsTable" Height="220" AutoGenerateColumns="False" x:FieldModifier="private" Margin="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Path=Name}" Width="92" Header="Имя"/>
                            <DataGridComboBoxColumn Width="85" Header="Тип" 
                                                    ItemsSource="{Binding Source={StaticResource CustomPropTypeEnum}}" 
                                                    SelectedItemBinding="{Binding Path=Type}"/>
                            <DataGridTextColumn Binding="{Binding Path=Default}" Width="80" Header="Значение по умолчанию"/>
                            <DataGridTextColumn Binding="{Binding Path=Descriptor}" Width="110" Header="Описание"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Margin="5" Orientation="Horizontal">
                        <Button Margin="5" Width="80" Click="AddButton_Click">Добавить</Button>
                        <Button Margin="5" Width="80" Click="DeleteButton_Click">Удалить</Button>
                    </StackPanel>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
